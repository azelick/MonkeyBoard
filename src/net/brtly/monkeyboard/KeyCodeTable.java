package net.brtly.monkeyboard;
import java.awt.event.KeyEvent;


public class KeyCodeTable {
	public static String lookup(int keyCode, int modifiers) {
	      String code = "KEYCODE_UNKNOWN";
	      switch(keyCode){
	          //case KeyEvent.VK_SOFT_LEFT: code = "KEYCODE_SOFT_LEFT";
	          //case KeyEvent.VK_SOFT_RIGHT: code = "KEYCODE_SOFT_RIGHT";
	          case KeyEvent.VK_HOME: code = "KEYCODE_HOME"; break;
	          case KeyEvent.VK_ESCAPE: code = "KEYCODE_BACK"; break;
	          //case KeyEvent.VK_CALL: code = "KEYCODE_CALL";
	          //case KeyEvent.VK_ENDCALL: code = "KEYCODE_ENDCALL";
	          case KeyEvent.VK_0: code = "KEYCODE_0"; break;
	          case KeyEvent.VK_1: code = "KEYCODE_1"; break;
	          case KeyEvent.VK_2: code = "KEYCODE_2"; break;
	          case KeyEvent.VK_3: code = "KEYCODE_3"; break;
	          case KeyEvent.VK_4: code = "KEYCODE_4"; break;
	          case KeyEvent.VK_5: code = "KEYCODE_5"; break;
	          case KeyEvent.VK_6: code = "KEYCODE_6"; break;
	          case KeyEvent.VK_7: code = "KEYCODE_7"; break;
	          case KeyEvent.VK_8: code = "KEYCODE_8"; break;
	          case KeyEvent.VK_9: code = "KEYCODE_9"; break;
	          //case KeyEvent.VK_STAR: code = "KEYCODE_STAR";
	          //case KeyEvent.VK_POUND: code = "KEYCODE_POUND";
	          case KeyEvent.VK_UP: code = "KEYCODE_DPAD_UP"; break;
	          case KeyEvent.VK_DOWN: code = "KEYCODE_DPAD_DOWN"; break;
	          case KeyEvent.VK_LEFT: code = "KEYCODE_DPAD_LEFT"; break;
	          case KeyEvent.VK_RIGHT: code = "KEYCODE_DPAD_RIGHT"; break;
	          //case KeyEvent.VK_ENTER: code = "KEYCODE_DPAD_CENTER";
	          //case KeyEvent.VK_VOLUME_UP: code = "KEYCODE_VOLUME_UP";
	          //case KeyEvent.VK_VOLUME_DOWN: code = "KEYCODE_VOLUME_DOWN";
	          //case KeyEvent.VK_POWER: code = "KEYCODE_POWER";
	          //case KeyEvent.VK_CAMERA: code = "KEYCODE_CAMERA";
	          //case KeyEvent.VK_CLEAR: code = "KEYCODE_CLEAR";
	          case KeyEvent.VK_A: code = "KEYCODE_A"; break;
	          case KeyEvent.VK_B: code = "KEYCODE_B"; break;
	          case KeyEvent.VK_C: code = "KEYCODE_C"; break;
	          case KeyEvent.VK_D: code = "KEYCODE_D"; break;
	          case KeyEvent.VK_E: code = "KEYCODE_E"; break;
	          case KeyEvent.VK_F: code = "KEYCODE_F"; break;
	          case KeyEvent.VK_G: code = "KEYCODE_G"; break;
	          case KeyEvent.VK_H: code = "KEYCODE_H"; break;
	          case KeyEvent.VK_I: code = "KEYCODE_I"; break;
	          case KeyEvent.VK_J: code = "KEYCODE_J"; break;
	          case KeyEvent.VK_K: code = "KEYCODE_K"; break;
	          case KeyEvent.VK_L: code = "KEYCODE_L"; break;
	          case KeyEvent.VK_M: code = "KEYCODE_M"; break;
	          case KeyEvent.VK_N: code = "KEYCODE_N"; break;
	          case KeyEvent.VK_O: code = "KEYCODE_O"; break;
	          case KeyEvent.VK_P: code = "KEYCODE_P"; break;
	          case KeyEvent.VK_Q: code = "KEYCODE_Q"; break;
	          case KeyEvent.VK_R: code = "KEYCODE_R"; break;
	          case KeyEvent.VK_S: code = "KEYCODE_S"; break;
	          case KeyEvent.VK_T: code = "KEYCODE_T"; break;
	          case KeyEvent.VK_U: code = "KEYCODE_U"; break;
	          case KeyEvent.VK_V: code = "KEYCODE_V"; break;
	          case KeyEvent.VK_W: code = "KEYCODE_W"; break;
	          case KeyEvent.VK_X: code = "KEYCODE_X"; break;
	          case KeyEvent.VK_Y: code = "KEYCODE_Y"; break;
	          case KeyEvent.VK_Z: code = "KEYCODE_Z"; break;
	          case KeyEvent.VK_COMMA: code = "KEYCODE_COMMA"; break;
	          case KeyEvent.VK_PERIOD: code = "KEYCODE_PERIOD"; break;
	          case KeyEvent.VK_ALT: code = "KEYCODE_ALT_LEFT"; break;
	          //case KeyEvent.VK_ALT_RIGHT: code = "KEYCODE_ALT_RIGHT";
	          case KeyEvent.VK_SHIFT: code = "KEYCODE_SHIFT_LEFT"; break;
	          //case KeyEvent.VK_SHIFT_RIGHT: code = "KEYCODE_SHIFT_RIGHT";
	          case KeyEvent.VK_TAB: code = "KEYCODE_TAB"; break;
	          case KeyEvent.VK_SPACE: code = "KEYCODE_SPACE"; break;
	          //case KeyEvent.VK_SYM: code = "KEYCODE_SYM";
	          //case KeyEvent.VK_EXPLORER: code = "KEYCODE_EXPLORER";
	          //case KeyEvent.VK_ENVELOPE: code = "KEYCODE_ENVELOPE";
	          case KeyEvent.VK_ENTER: code = "KEYCODE_ENTER"; break;
	          case KeyEvent.VK_DELETE: code = "KEYCODE_DEL"; break;
	          case KeyEvent.VK_BACK_SPACE: code = "KEYCODE_DEL"; break;
	          case KeyEvent.VK_DEAD_GRAVE: code = "KEYCODE_GRAVE"; break;
	          case KeyEvent.VK_MINUS: code = "KEYCODE_MINUS"; break;
	          case KeyEvent.VK_EQUALS: code = "KEYCODE_EQUALS"; break;
	          case KeyEvent.VK_OPEN_BRACKET: code = "KEYCODE_LEFT_BRACKET"; break;
	          case KeyEvent.VK_CLOSE_BRACKET: code = "KEYCODE_RIGHT_BRACKET"; break;
	          case KeyEvent.VK_BACK_SLASH: code = "KEYCODE_BACKSLASH"; break;
	          case KeyEvent.VK_SEMICOLON: code = "KEYCODE_SEMICOLON"; break;
	          //case KeyEvent.VK_APOSTROPHE: code = "KEYCODE_APOSTROPHE";
	          case KeyEvent.VK_SLASH: code = "KEYCODE_SLASH"; break;
	          case KeyEvent.VK_AT: code = "KEYCODE_AT"; break;
	          //case KeyEvent.VK_NUM: code = "KEYCODE_NUM";
	          //case KeyEvent.VK_HEADSETHOOK: code = "KEYCODE_HEADSETHOOK";
	          case KeyEvent.VK_PLUS: code = "KEYCODE_PLUS"; break;
	          //case KeyEvent.VK_MENU: code = "KEYCODE_MENU";
	          //case KeyEvent.VK_NOTIFICATION: code = "KEYCODE_NOTIFICATION";
	          //case KeyEvent.VK_SEARCH: code = "KEYCODE_SEARCH";
	          //case KeyEvent.VK_MEDIA_PLAY_PAUSE: code = "KEYCODE_MEDIA_PLAY_PAUSE";
	          //case KeyEvent.VK_MEDIA_STOP: code = "KEYCODE_MEDIA_STOP";
	          //case KeyEvent.VK_MEDIA_NEXT: code = "KEYCODE_MEDIA_NEXT";
	          //case KeyEvent.VK_MEDIA_PREVIOUS: code = "KEYCODE_MEDIA_PREVIOUS";
	          //case KeyEvent.VK_MEDIA_REWIND: code = "KEYCODE_MEDIA_REWIND";
	          //case KeyEvent.VK_MEDIA_FAST_FORWARD: code = "KEYCODE_MEDIA_FAST_FORWARD";
	          //case KeyEvent.VK_MUTE: code = "KEYCODE_MUTE";
	          case KeyEvent.VK_PAGE_UP: code = "KEYCODE_PAGE_UP"; break;
	          case KeyEvent.VK_PAGE_DOWN: code = "KEYCODE_PAGE_DOWN"; break;
//		          case KeyEvent.VK_BUTTON_A: code = "KEYCODE_BUTTON_A";
//		          case KeyEvent.VK_BUTTON_B: code = "KEYCODE_BUTTON_B";
//		          case KeyEvent.VK_BUTTON_C: code = "KEYCODE_BUTTON_C";
//		          case KeyEvent.VK_BUTTON_X: code = "KEYCODE_BUTTON_X";
//		          case KeyEvent.VK_BUTTON_Y: code = "KEYCODE_BUTTON_Y";
//		          case KeyEvent.VK_BUTTON_Z: code = "KEYCODE_BUTTON_Z";
//		          case KeyEvent.VK_BUTTON_L1: code = "KEYCODE_BUTTON_L1";
//		          case KeyEvent.VK_BUTTON_R1: code = "KEYCODE_BUTTON_R1";
//		          case KeyEvent.VK_BUTTON_L2: code = "KEYCODE_BUTTON_L2";
//		          case KeyEvent.VK_BUTTON_R2: code = "KEYCODE_BUTTON_R2";
//		          case KeyEvent.VK_BUTTON_THUMBL: code = "KEYCODE_BUTTON_THUMBL";
//		          case KeyEvent.VK_BUTTON_THUMBR: code = "KEYCODE_BUTTON_THUMBR";
//		          case KeyEvent.VK_BUTTON_START: code = "KEYCODE_BUTTON_START";
//		          case KeyEvent.VK_BUTTON_SELECT: code = "KEYCODE_BUTTON_SELECT";
//		          case KeyEvent.VK_BUTTON_MODE: code = "KEYCODE_BUTTON_MODE";
	      }
	      return code;
	}
}
